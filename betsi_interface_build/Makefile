# Makefile for python interface for package betsi_interface.
# File is generated by gopy. Do not edit.
# gopy build -output=betsi_interface_build ./betsi_interface

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/home/jpalms/code/tricera/ESF/.direnv/python-3.10.9/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/usr/include/python3.10
LDFLAGS = -L/usr/lib -lpython3.10 -lcrypt -ldl  -lm -lm

all: gen build

gen:
	gopy gen -no-make ./betsi_interface

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm betsi_interface.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w betsi_interface.go
	# generate betsi_interface_go$(LIBEXT) from betsi_interface.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o betsi_interface_go$(LIBEXT) betsi_interface.go
	# use pybindgen to build the betsi_interface.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _betsi_interface$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated betsi_interface.py python wrapper imports this c-code package
	
	$(GCC) betsi_interface.c  betsi_interface_go$(LIBEXT) -o _betsi_interface$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


